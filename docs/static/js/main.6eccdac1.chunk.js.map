{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categorias","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"yMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAe5C,OACI,sBAAMC,SATS,SAACC,GAChBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAU,OAAGP,GAAH,mBAAiBO,OACzCN,EAAc,MAKlB,SACI,uBAAOO,KAAK,OACRC,MAAOT,EACPU,SAhBY,SAACP,GACrBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAMTA,EAAKC,OANI,uBAKfC,EALe,EAKfA,KAEEC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAE/B,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECIX,SAAAA,GAAa,IAAD,EACVd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAHuB,mBAC7BC,EAD6B,KACtBC,EADsB,KAcpC,OATAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAACC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGtB,CAACpB,IACGqB,EDhBsBK,CAAa1B,GAA9Ba,EAFuB,EAE5BN,KAAYa,EAFgB,EAEhBA,QACnB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAClDoB,GAAW,mBAAGJ,UAAU,mCAAb,2BACZ,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAI,SAAAC,GACP,OAAO,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEqBtCgB,EA/BI,WAAK,IAAD,EAEiBzC,mBAAS,CAAC,kBAF3B,mBAEZ0C,EAFY,KAEA3C,EAFA,KAanB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,uBAEA,6BAEQ2C,EAAWnB,KAAI,SAAAT,GACX,OAAO,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCtB7C6B,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6eccdac1.chunk.js","sourcesContent":["import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    // Obteniendo el nuevo valor del input\r\n    const handleInputChange=(e)=>{\r\n        setInputValue(e.target.value);\r\n    }\r\n    // Capturando el evento del submit y previene el refresh\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length>2){\r\n            setCategories(categorias=>[inputValue,...categorias]);\r\n            setInputValue('');\r\n        }\r\n        // console.log('evento submit');\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input type='text'\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n};","export const getGifs = async category => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=t7uaMd17UDrcrQnFKpH6rOYJjCqELKUA`;\r\n    const resp = await fetch(url);\r\n    const {\r\n        data\r\n    } = await resp.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({title,url}) => {\r\n    // console.log({id,title,url});\r\n    return (\r\n        <div className='card animate__animated animate__bounce'>\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n    \r\n    const {data:images,loading}= useFetchGifs(category);\r\n    return (\r\n        <>\r\n            <h3 className='animate__animated animate__bounce'>{category}</h3>           \r\n            {loading && <p className='animate__animated animate__flash'>'Cargando...'</p>}\r\n            <div className='card-grid'>\r\n                {\r\n                    images.map(img => {\r\n                        return <GifGridItem key={img.id} {...img}/>\r\n                    })\r\n                }               \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import {\r\n    useEffect,\r\n    useState\r\n} from \"react\";\r\nimport {\r\n    getGifs\r\n} from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = category => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    });\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then((imgs) => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            });\r\n    }, [category]);\r\n    return state;\r\n}","import React,{useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp=()=>{\r\n    \r\n    const [categories, setCategories] = useState(['One Punch Man']);\r\n    \r\n    /* const handleAdd=()=>{\r\n        // Agregando al final\r\n        // setCategories([...categories,'serie']);\r\n        // Agregando al principio\r\n        // setCategories(['serie',...categories]);\r\n        // Tercera forma usando un callback\r\n        setCategories(categorias=>[...categorias,'serie']);\r\n    } */\r\n    /* const categories=['One Punch Man','Samurai X','Dragon Ball']; */\r\n    return  (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            {/* <AddCategory /> */}\r\n            <hr/>\r\n            {/* <button onClick={handleAdd}>Agregar</button> */}\r\n            <ol>\r\n                {\r\n                    categories.map(category=>{\r\n                        return <GifGrid key={category} category={category}/>\r\n                    })\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n    document.getElementById('root')\n);"],"sourceRoot":""}